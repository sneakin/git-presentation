GIT
  how i learned to stop worrying and love the hashes
  
  
Why git?
  decentralized
  so easy to start working on a project publicly and contribute

  
Content not files
  echo one > test.txt
  git add test.txt
  echo two > test.txt
  git commit
  git status
    #	modified:   test.txt
  
  
Side by side comparison with svn
  command comparison
    checkout => clone
    revert => checkout/reset
  workflow changes
  goodbye "sane" revision numbers! hello crazy hashes and relatives
    1, 2, 3 replaced with
      b8cb862361b32f5fc35553c08219ff43cf2ff374
      79413593654f5bd09d66b48dd5b48262e8af5928

  
pushing
  push <branch> [--all]

Branching
  best practices
    development and production?
      branch for bug-fixes?
    branch per feature? (local or remote?)
  
MERGING!
  git keeps track of merged commits
  rebase --interactive
  persisting local changes to externals

Handy Tricks  
  commit --amend
    ah crap, I forgot one file or messed up the commit message
  add --interactive
  cherry-pick
    easy movement of fixes from other branches into production branch
  
Submodules
  externals but better
  
hooks

migration to git
  initial import